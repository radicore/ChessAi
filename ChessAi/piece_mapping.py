import numpy as np

# 2D square mapping tables

# generally in multiples of 5 since capturing is not always the good option

PAWNS_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    30, 30, 30, 30, 30, 30, 30, 30,
    20, 20, 20, 20, 20, 20, 20, 20,
    5, 5, 5, 20, 20, 5, 5, 5,
    2, 2, 2, 20, 20, 2, 2, 2,
    5, 2, 2, 18, 18, 2, 2, 5,
    4, 4, 4, -10, -10, 4, 4, 4,
    0, 0, 0, 0, 0, 0, 0, 0,
]

PAWNS_END_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    45, 40, 40, 40, 40, 40, 40, 45,
    35, 30, 30, 30, 30, 30, 30, 35,
    25, 20, 20, 20, 20, 20, 20, 25,
    15, 10, 10, 10, 10, 10, 10, 15,
    -5, -5, -5, -5, -5, -5, -5, -5,
    -5, -5, -5, -5, -5, -5, -5, -5,
    0, 0, 0, 0, 0, 0, 0, 0,
]

KNIGHTS_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 5, 10, 10, 5, 0, 0,
    0, 0, 12, 12, 12, 12, 0, 0,
    0, 0, 12, 12, 12, 12, 0, 0,
    0, 12, 12, 12, 12, 12, 12, 0,
    0, 0, 4, 10, 10, 4, 0, 0,
    -5, -8, -5, -5, -5, -5, -8, -5,
]

KNIGHTS_END_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 5, 5, 5, 5, 5, 5, 0,
    0, 5, 10, 10, 10, 10, 5, 0,
    0, 5, 10, 10, 10, 10, 5, 0,
    0, 5, 10, 10, 10, 10, 5, 0,
    0, 5, 10, 10, 10, 10, 5, 0,
    0, 5, 5, 5, 5, 5, 5, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
]

BISHOPS_TABLE = [
    -5, -5, -5, -5, -5, -5, -5, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 0, 5, 5, 0, 0, -5,
    -5, 5, 12, 12, 12, 12, 5, -5,
    -5, 0, 12, 12, 12, 12, 0, -5,
    -5, 0, 12, 12, 12, 12, 0, -5,
    -5, 12, 5, 12, 12, 5, 12, -5,
    -5, -5, -8, -5, -5, -8, -5, -5,
]

BISHOPS_END_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 5, 5, 5, 5, 5, 5, 0,
    0, 5, 10, 10, 10, 10, 5, 0,
    0, 5, 10, 10, 10, 10, 5, 0,
    0, 5, 10, 10, 10, 10, 5, 0,
    0, 5, 10, 10, 10, 10, 5, 0,
    0, 5, 5, 5, 5, 5, 5, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
]

ROOKS_TABLE = [
    5, 5, 5, 10, 10, 5, 5, 5,
    20, 20, 20, 20, 20, 20, 20, 20,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    8, 8, 10, 10, 10, 10, 8, 8,
    0, 0, 12, 12, 12, 12, 0, 0,
    -2, 0, 8, 12, 12, 8, 0, -2,
]

ROOKS_END_TABLE = [
    0, 0, 8, 12, 12, 8, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    8, 0, 6, 6, 6, 6, 0, 8,
    12, 0, 6, 10, 10, 6, 0, 12,
    12, 0, 6, 10, 10, 6, 0, 12,
    8, 0, 6, 6, 6, 6, 0, 8,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 8, 12, 12, 8, 0, 0,
]

QUEENS_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 2, 2, 2, 2, 0, 0,
    0, 0, 5, 5, 5, 5, 0, 0,
    0, 2, 5, 5, 5, 5, 2, 0,
    2, 2, 5, 5, 5, 5, 2, 2,
    0, 0, 2, 2, 2, 2, 0, 0,
    0, 0, 0, 2, 2, 0, 0, 0,
]

QUEENS_END_TABLE = [
    -5, -5, -5, -5, -5, -5, -5, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, 0, 20, 20, 20, 20, 0, -5,
    -5, 0, 20, 25, 25, 20, 0, -5,
    -5, 0, 20, 25, 25, 20, 0, -5,
    -5, 0, 20, 20, 20, 20, 0, -5,
    -5, 0, 0, 0, 0, 0, 0, -5,
    -5, -5, -5, -5, -5, -5, -5, -5,
]

KINGS_MIDDLE_TABLE = [
    -40, -50, -50, -50, -50, -50, -50, -40,
    -30, -40, -50, -50, -50, -50, -40, -30,
    -20, -30, -40, -50, -50, -40, -30, -20,
    -10, -20, -30, -40, -40, -30, -20, -10,
    -10, -10, -20, -30, -30, -20, -10, -10,
    -5, -5, -5, -10, -10, -5, -5, -5,
    5, 5, 5, -5, -5, 5, 5, 5,
    5, 12, 12, 0, 0, 5, 15, 5,
]

KINGS_END_TABLE = [
    -6, -4, -4, -4, -4, -4, -4, -6,
    -4, 8, 8, 8, 8, 8, 8, -4,
    -4, 8, 10, 10, 10, 10, 8, -4,
    -4, 8, 10, 15, 15, 10, 8, -4,
    -4, 8, 10, 15, 15, 10, 8, -4,
    -4, 8, 10, 10, 10, 10, 8, -4,
    -4, 8, 8, 8, 8, 8, 8, -4,
    -6, -4, -4, -4, -4, -4, -4, -6,
]

# Reverse board for black is already implemented in the evaluation.py, so no need to do reversed tables here

# Convert to numpy tables since storing and retrieving data is slightly faster

PAWNS_TABLE = np.array(PAWNS_TABLE)
KNIGHTS_TABLE = np.array(KNIGHTS_TABLE)
BISHOPS_TABLE = np.array(BISHOPS_TABLE)
ROOKS_TABLE = np.array(ROOKS_TABLE)
QUEENS_TABLE = np.array(QUEENS_TABLE)
KINGS_MIDDLE_TABLE = np.array(KINGS_MIDDLE_TABLE)

PAWNS_END_TABLE = np.array(PAWNS_END_TABLE)
KNIGHTS_END_TABLE = np.array(KNIGHTS_END_TABLE)
BISHOPS_END_TABLE = np.array(BISHOPS_END_TABLE)
ROOKS_END_TABLE = np.array(ROOKS_END_TABLE)
QUEENS_END_TABLE = np.array(QUEENS_END_TABLE)
KINGS_END_TABLE = np.array(KINGS_END_TABLE)


