import numpy as np

# 2D square mapping tables

PAWNS_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    10, 10, 10, 10, 10, 10, 10, 10,
    6, 6, 4, 4, 4, 4, 6, 6,
    4, 4, 10, 12, 12, 6, 4, 4,
    3, 3, 10, 12, 12, 2, 3, 3,
    2, 2, 10, 8, 8, 2, 2, 2,
    -2, -2, -6, -12, -12, 2, -2, -2,
    0, 0, 0, 0, 0, 0, 0, 0,
]

PAWNS_END_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    30, 30, 30, 30, 30, 30, 30, 30,
    30, 30, 30, 30, 30, 30, 30, 30,
    25, 25, 25, 25, 25, 25, 25, 25,
    15, 15, 15, 15, 15, 15, 15, 15,
    -5, -5, -5, -5, -5, -5, -5, -5,
    -10, -10, -10, -10, -10, -10, -10, -10,
    0, 0, 0, 0, 0, 0, 0, 0,
]

KNIGHTS_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 4, 5, 5, 4, 0, 0,
    0, 0, 6, 7, 7, 6, 0, 0,
    0, 0, 6, 8, 8, 6, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    -4, -6, -4, -4, -4, -4, -6, -4,
]

BISHOPS_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 2, 2, 0, 0, 0,
    0, 0, 4, 4, 4, 4, 0, 0,
    0, 0, 4, 8, 8, 4, 0, 0,
    0, 2, 6, 4, 4, 6, 2, 0,
    0, 6, 0, 4, 4, 0, 6, 0,
    -4, -4, -6, -4, -4, -6, -4, -4,
]

ROOKS_TABLE = [
    8, 8, 8, 10, 10, 8, 8, 8,
    16, 16, 16, 16, 16, 16, 16, 16,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, -2, -2, 0, 0, 0,
    0, 0, 0, -2, -2, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 8, 8, 4, 0, 0,
]

ROOKS_END_TABLE = [
    0, 4, 0, 0, 0, 0, 4, 0,
    4, 4, 4, 4, 4, 4, 4, 4,
    0, 4, 6, 6, 6, 6, 4, 0,
    0, 4, 6, 8, 8, 6, 4, 0,
    0, 4, 6, 8, 8, 6, 4, 0,
    0, 4, 6, 6, 6, 6, 4, 0,
    4, 4, 4, 4, 4, 4, 4, 4,
    0, 4, 0, 0, 0, 0, 4, 0,
]

QUEENS_TABLE = [
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 2, 2, 2, 2, 0, 0,
    0, 0, 2, 6, 6, 2, 0, 0,
    0, 0, 2, 6, 6, 2, 0, 0,
    0, 0, 2, 2, 2, 2, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 4, 0, 0, 0, 0,
]

QUEENS_END_TABLE = [
    0, 0,  0,  0,  0,  0,  0, 0,
    0, 8,  0,  0,  0,  0,  8, 0,
    0, 0,  12, 12, 12, 12, 0, 0,
    0, 0,  12, 10, 10, 12, 0, 0,
    0, 0,  12, 10, 10, 12, 0, 0,
    0, 0,  12, 12, 12, 12, 0, 0,
    0, 8,  0,  0,  0,  0,  8, 0,
    0, 0,  0,  0,  0,  0,  0, 0,
]

KINGS_MIDDLE_TABLE = [
    -14, -10, -12, -16, -16, -12, -10, -14,
    -14, -10, -12, -16, -16, -12, -10, -14,
    -14, -10, -16, -20, -20, -16, -10, -14,
    -14, -10, -16, -20, -20, -16, -10, -14,
    -12, -8, -12, -16, -16, -12, -8, -12,
    -10, -6, -8, -12, -12, -8, -6, -10,
    -8, -4, -6, -8, -8, -6, -4, -8,
    0, 8, 8, 0, 0, 0, 8, 0,
]

KINGS_END_TABLE = [
    -4, -4, -4, -4, -4, -4, -4, -4,
    -4, 8, 8, 8, 8, 8, 8, -4,
    -4, 8, 10, 10, 10, 10, 8, -4,
    -4, 8, 10, 12, 12, 10, 8, -4,
    -4, 8, 10, 12, 12, 10, 8, -4,
    -4, 8, 10, 10, 10, 10, 8, -4,
    -4, 8, 8, 8, 8, 8, 8, -4,
    -4, -4, -4, -4, -4, -4, -4, -4,
]

# Reverse board for black is already implemented in the evaluation.py, so no need to do reversed tables here

# Convert to numpy tables since storing and retrieving data is slightly faster

PAWNS_TABLE = np.array(PAWNS_TABLE)
KNIGHTS_TABLE = np.array(KNIGHTS_TABLE)
BISHOPS_TABLE = np.array(BISHOPS_TABLE)
ROOKS_TABLE = np.array(ROOKS_TABLE)
QUEENS_TABLE = np.array(QUEENS_TABLE)
KINGS_MIDDLE_TABLE = np.array(KINGS_MIDDLE_TABLE)

PAWNS_END_TABLE = np.array(PAWNS_END_TABLE)
ROOKS_END_TABLE = np.array(ROOKS_END_TABLE)
QUEENS_END_TABLE = np.array(QUEENS_END_TABLE)
KINGS_END_TABLE = np.array(KINGS_END_TABLE)
